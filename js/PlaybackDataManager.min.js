class PlaybackDataManager{constructor(proxyServerUrl){this.proxyServerUrl=proxyServerUrl}async savePlaybackData(userId,playerId,songName,artistName,playCount,playDuration,system_rightascension,system_declination){try{if(!(await fetch(`${this.proxyServerUrl}/savePlaybackData`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:userId,playerId:playerId,songName:songName,artistName:artistName,playCount:playCount,playDuration:playDuration,system_rightascension:system_rightascension,system_declination:system_declination})})).ok)throw new Error("Failed to save playback data");console.log("Data saved successfully")}catch(error){console.error("Error saving playback data:",error)}}async getPlaybackData(playerId){try{const response=await fetch(`${this.proxyServerUrl}/getPlaybackData?playerId=${playerId}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!response.ok)throw new Error("Failed to retrieve playback data");const data=await response.json();return console.log("Retrieved data:",data),data}catch(error){return console.error("Error retrieving playback data:",error),[]}}}